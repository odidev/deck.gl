name: test

# On every pull request, but only on push to master
on:
  push:
    branches:
    - master
  pull_request:

jobs:
  test-node:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2.1.1

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: |
          sudo apt-get install -y mesa-utils xvfb libgl1-mesa-dri libglapi-mesa libosmesa6
          yarn bootstrap

      - name: Run tests
        run: |
          xvfb-run -s "-ac -screen 0 1280x1024x16" yarn test ci

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.1/install.sh | bash
          nvm install 12.12.0 && nvm use 12.12.0
          cd bindings/pydeck
          make setup-env
          make init

      - name: Run tests
        run: |
          cd bindings/pydeck
          make test
  armv64_job:
    name: Build and Test for arm64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
             arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install git python3 python3-pip yarn && apt-get -y install curl && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              apt-get install -y mesa-utils xvfb libgl1-mesa-dri libglapi-mesa libosmesa6 && apt-get install -y npm && \
              apt install -y python3.8-venv && python3.8 -m venv venv38 && source venv38/bin/activate && \
              python3 -m pip install --upgrade pip && \
              npm install deck.gl && \
              pip3 install pydeck pandas pytest && \
              cd bindings/pydeck && \
              pytest && \
              deactivate'
